{"version":3,"file":"static/js/All reviews page.c58ba4bb.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","pages/AllReviews/AllReviews.jsx"],"sourcesContent":["import { VideoModal } from 'components/AboutUs/VideoModal/VideoModal';\nimport { YouTubeVideoSoundBtn } from 'components/HowItWorks/HowItWorks.styled';\nimport { useEffect, useState } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport ReactPlayer from 'react-player';\nimport {\n  LeadBtnWrapper,\n  ReviewLeadBtn,\n  ReviewsBackground,\n  ReviewsBox,\n  ReviewsSection,\n  ReviewsSubTitle,\n  ReviewsText,\n  ReviewsTextBox,\n  ReviewsTitle,\n  ReviewsVideoWrapper,\n  VideoBox,\n  VideoLimiter,\n} from './Reviews.styled';\nimport { ReviewsSwiper } from './ReviewsSwiper/ReviewsSwiper';\n\nexport const Reviews = ({ toggleModal }) => {\n  const { ref, inView } = useInView({\n    triggerOnce: true,\n  });\n  const [videoRef, videoInView] = useInView();\n  const [isVideoModalOpen, setIsVideoModalOpen] = useState(false);\n\n  const toggleVideoModal = () => {\n    setIsVideoModalOpen(isOpen => !isOpen);\n    if (!document.body.style.overflowY) {\n      document.body.style.overflowY = 'hidden';\n    }\n  };\n\n  const closeVideoModal = () => {\n    setIsVideoModalOpen(isOpen => (isOpen = false));\n    !document.body.style.overflowY && isVideoModalOpen\n      ? (document.body.style.overflowY = 'hidden')\n      : (document.body.style.overflowY = '');\n  };\n\n  useEffect(() => {\n    const onEscapeClose = event => {\n      if (event.code === 'Escape' && isVideoModalOpen) {\n        closeVideoModal();\n      }\n    };\n\n    window.addEventListener('keydown', onEscapeClose);\n\n    return () => {\n      window.removeEventListener('keydown', onEscapeClose);\n    };\n  });\n\n  return (\n    <ReviewsBackground>\n      <ReviewsSection id=\"reviews\" ref={ref}>\n        <ReviewsBox>\n          <ReviewsTitle id=\"reviews-anchor\">\n            <ReviewsSubTitle>ВІДГУКИ</ReviewsSubTitle> ПРО КУРС\n          </ReviewsTitle>\n          <ReviewsVideoWrapper>\n            <VideoLimiter ref={videoRef}>\n              <VideoBox onClick={toggleVideoModal}>\n                <YouTubeVideoSoundBtn />\n                <ReactPlayer\n                  loop={true}\n                  controls={false}\n                  muted={true}\n                  playing={videoInView ? true : false}\n                  style={{\n                    display: 'block',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                  }}\n                  width=\"100%\"\n                  height=\"100%\"\n                  url=\"https://youtu.be/qj-w9wzo76Q?si=EBLs8ap7W_RqBsXe\"\n                />\n              </VideoBox>\n            </VideoLimiter>\n            <ReviewsTextBox>\n              <ReviewsText>\n                Відгуки наших клієнтів вражають, адже кожен студент отримує в\n                подарунок сучасний ноутбук-трансформер - потужний інструмент для\n                досягнення нових висот як у навчанні так і у повсякденному\n                житті. Приєднуйтесь до нас вже сьогодні!\n              </ReviewsText>\n              <LeadBtnWrapper>\n                <ReviewLeadBtn onClick={toggleModal}> ЗАЛИШИТИ ЗАЯВКУ </ReviewLeadBtn>\n              </LeadBtnWrapper>\n            </ReviewsTextBox>\n          </ReviewsVideoWrapper>\n        </ReviewsBox>\n        {/* {inView && <ReviewsMarquee toggleModal={toggleModal} />} */}\n        {inView && <ReviewsSwiper />}\n      </ReviewsSection>\n      {isVideoModalOpen && (\n        <VideoModal\n          closeVideoModal={closeVideoModal}\n          url={'https://youtu.be/qj-w9wzo76Q'}\n        />\n      )}\n    </ReviewsBackground>\n  );\n};\n","import { BackgroundWrapper } from 'components/BackgroundWrapper/BackgroundWrappers';\nimport { Consent } from 'components/Consent/Consent';\nimport { LeadForm } from 'components/LeadForm/LeadForm';\nimport { Reviews } from 'components/Reviews/Reviews';\nimport { useEffect, useState } from 'react';\n\nconst AllReviews = ({ utms }) => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n    if (!document.body.style.overflowY) {\n      document.body.style.overflowY = 'hidden';\n    }\n  };\n\n  const closeModal = () => {\n    setIsOpenModal(isOpen => (isOpen = false));\n    !document.body.style.overflowY && isOpenModal\n      ? (document.body.style.overflowY = 'hidden')\n      : (document.body.style.overflowY = '');\n  };\n\n  useEffect(() => {\n    const onEscapeClose = event => {\n      if (event.code === 'Escape' && isOpenModal) {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', onEscapeClose);\n\n    return () => {\n      window.removeEventListener('keydown', onEscapeClose);\n    };\n  });\n\n  return (\n    <>\n      <BackgroundWrapper>\n        <Reviews toggleModal={toggleModal} closeModal={closeModal} />\n      </BackgroundWrapper>\n\n      <Consent />\n      {isOpenModal && <LeadForm closeModal={closeModal} utms={utms} />}\n    </>\n  );\n};\n\nexport default AllReviews;\n"],"names":["Reviews","_ref","toggleModal","ref","inView","useInView","triggerOnce","videoRef","videoInView","isVideoModalOpen","setIsVideoModalOpen","useState","closeVideoModal","isOpen","document","body","style","overflowY","useEffect","onEscapeClose","event","code","window","addEventListener","removeEventListener","_jsxs","ReviewsBackground","children","ReviewsSection","id","ReviewsBox","ReviewsTitle","_jsx","ReviewsSubTitle","ReviewsVideoWrapper","VideoLimiter","VideoBox","onClick","toggleVideoModal","YouTubeVideoSoundBtn","ReactPlayer","loop","controls","muted","playing","display","position","top","left","width","height","url","ReviewsTextBox","ReviewsText","LeadBtnWrapper","ReviewLeadBtn","ReviewsSwiper","VideoModal","utms","isOpenModal","setIsOpenModal","closeModal","_Fragment","BackgroundWrapper","Consent","LeadForm"],"sourceRoot":""}