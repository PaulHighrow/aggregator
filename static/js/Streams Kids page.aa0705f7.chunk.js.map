{"version":3,"file":"static/js/Streams Kids page.aa0705f7.chunk.js","mappings":"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","sources":["components/Stream/StreamNav/StreamNav.styled.js","components/Stream/StreamNavKids/StreamNavKids.jsx","pages/StreamsKids/StreamsKids.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StreamNavigationBox = styled.section`\n  height: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  padding: 20px;\n  gap: 15px;\n\n  @media screen and (min-width: 768px) {\n    padding: 30px;\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 40px;\n    gap: 25px;\n  }\n`;\n\nexport const StreamNavigation = styled.div`\n  display: flex;\n  flex-direction: column;\n  \n  font-family: var(--streams-font-family);\n  gap: 15px;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    gap: 25px;\n  }\n`;\n\nexport const StreamNavTitle = styled.h2`\n  text-align: center;\n  color: var(--main-color);\n  font-size: 32px;\n  font-weight: 600;\n  letter-spacing: 1.8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 40px;\n  }\n`;\n\nexport const StreamNavDescription = styled.p`\n  text-align: center;\n  color: var(--main-color);\n\n  font-size: 22px;\n  font-weight: 500;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 26px;\n  }\n`;\n\nexport const StreamNavList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: 20px;\n`;\n\nexport const StreamNavItem = styled.li`\n  min-width: 56px;\n  width: max-content;\n\n  @media screen and (min-width: 768px) {\n    min-width: 69px;\n  }\n  @media screen and (min-width: 1280px) {\n    min-width: 80px;\n  }\n`;\n\nexport const StreamNavLink = styled(Link)`\n  display: block;\n\n  cursor: pointer;\n  text-decoration: none;\n  text-align: center;\n  padding: 8px;\n\n  font-size: 32px;\n  font-weight: 600;\n  letter-spacing: 1.8px;\n\n  color: var(--accent-color);\n  border: 2px solid var(--main-transparent-color);\n  border-radius: 50%;\n\n  transition: color var(--animation-global),\n    background-color var(--animation-global);\n\n  @media screen and (min-width: 768px) {\n    padding: 12px;\n    font-size: 36px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 16px;\n    font-size: 40px;\n  }\n\n  &:hover,\n  &:focus {\n    color: var(--main-color);\n    background-color: var(--accent-transparent-color);\n  }\n`;\n","import {\n  StreamNavDescription,\n  StreamNavItem,\n  StreamNavLink,\n  StreamNavList,\n  StreamNavTitle,\n  StreamNavigation,\n  StreamNavigationBox,\n} from '../StreamNav/StreamNav.styled';\n\nexport const StreamNavKids = () => {\n  return (\n    <>\n      <StreamNavigationBox>\n        <StreamNavigation>\n          <StreamNavTitle>Вітаємо на сторінці онлайн-уроків!</StreamNavTitle>\n          <StreamNavDescription>\n            Щоб знайти потрібну трансляцію, просто оберіть рівень:\n          </StreamNavDescription>\n          <StreamNavList>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams-kids/a1'}>A1</StreamNavLink>\n            </StreamNavItem>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams-kids/a2'}>A2</StreamNavLink>\n            </StreamNavItem>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams-kids/b1'}>B1</StreamNavLink>\n            </StreamNavItem>\n          </StreamNavList>\n        </StreamNavigation>\n      </StreamNavigationBox>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { StreamsBackgroundWrapper } from 'components/BackgroundWrapper/BackgroundWrappers';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { LoaderWrapper } from 'components/SharedLayout/Loaders/Loader.styled';\nimport { StreamNavKids } from 'components/Stream/StreamNavKids/StreamNavKids';\nimport { useLayoutEffect, useState } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\n\naxios.defaults.baseURL = 'https://aggregator-server.onrender.com';\n\nconst StreamsKids = () => {\n  let location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [links, setLinks] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n\n  const wakeupRequest = async () => {\n    try {\n      const wake = await axios.get('/');\n      console.log(wake.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const resetLogin = () => {\n    localStorage.removeItem('AP_logged_in');\n    const isLoggedIn = localStorage.getItem('APLoggedIn');\n    if (!isLoggedIn) {\n      localStorage.removeItem('userID');\n      localStorage.removeItem('userName');\n    }\n  };\n\n  const detectUser = async () => {\n    try {\n      let ip;\n      try {\n        ip = (await axios.get('https://jsonip.com/')).data.ip;\n        console.log(ip);\n      } catch (error) {\n        console.log(error);\n      }\n      const id = localStorage.getItem('userID');\n      const user = await axios.get(`https://ap-chat.onrender.com/users/${id}`);\n      setCurrentUser(\n        currentUser =>\n          (currentUser = user.data || {\n            username: 'User Is Not Logged In',\n            isBanned: false,\n            userIP: ip || 'user has disabled ip tracker',\n          })\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useLayoutEffect(() => {\n    resetLogin();\n    wakeupRequest();\n    detectUser();\n\n    const getLinksRequest = async () => {\n      try {\n        setIsLoading(isLoading => (isLoading = true));\n        setLinks((await axios.get('/links')).data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n\n    getLinksRequest();\n  }, []);\n\n  return (\n    <>\n      <StreamsBackgroundWrapper>\n        {location.pathname === '/streams-kids' ||\n        location.pathname === '/streams-kids/' ? (\n          <StreamNavKids />\n        ) : (\n          ''\n        )}\n        <Outlet context={[links, isLoading, currentUser, setCurrentUser]} />\n        {isLoading && (\n          <LoaderWrapper>\n            <Loader />\n          </LoaderWrapper>\n        )}\n      </StreamsBackgroundWrapper>\n    </>\n  );\n};\n\nexport default StreamsKids;\n"],"names":["StreamNavigationBox","styled","_templateObject","_taggedTemplateLiteral","StreamNavigation","_templateObject2","StreamNavTitle","_templateObject3","StreamNavDescription","_templateObject4","StreamNavList","_templateObject5","StreamNavItem","_templateObject6","StreamNavLink","Link","_templateObject7","StreamNavKids","_jsx","_Fragment","children","_jsxs","to","axios","location","useLocation","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","links","setLinks","_useState5","_useState6","currentUser","setCurrentUser","wakeupRequest","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wake","wrap","_context","prev","next","sent","console","log","data","t0","stop","apply","arguments","detectUser","_ref2","_callee2","ip","id","user","_context2","localStorage","getItem","concat","username","isBanned","userIP","t1","useLayoutEffect","removeItem","getLinksRequest","_ref3","_callee3","_context3","t2","finish","StreamsBackgroundWrapper","pathname","Outlet","context","LoaderWrapper","Loader"],"sourceRoot":""}