{"version":3,"file":"static/js/Streams Kids page.4fa5c60c.chunk.js","mappings":"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","sources":["components/Stream/StreamNav/StreamNav.styled.js","components/Stream/StreamNavKids/StreamNavKids.jsx","pages/StreamsKids/StreamsKids.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StreamNavigationBox = styled.section`\n  height: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  padding: 20px;\n  gap: 15px;\n\n  @media screen and (min-width: 768px) {\n    padding: 30px;\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 40px;\n    gap: 25px;\n  }\n`;\n\nexport const StreamNavigation = styled.div`\n  display: flex;\n  flex-direction: column;\n  \n  font-family: var(--streams-font-family);\n  gap: 15px;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    gap: 25px;\n  }\n`;\n\nexport const StreamNavTitle = styled.h2`\n  text-align: center;\n  color: var(--main-color);\n  font-size: 32px;\n  font-weight: 600;\n  letter-spacing: 1.8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 40px;\n  }\n`;\n\nexport const StreamNavDescription = styled.p`\n  text-align: center;\n  color: var(--main-color);\n\n  font-size: 22px;\n  font-weight: 500;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 26px;\n  }\n`;\n\nexport const StreamNavList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: 20px;\n`;\n\nexport const StreamNavItem = styled.li`\n  min-width: 56px;\n  width: max-content;\n\n  @media screen and (min-width: 768px) {\n    min-width: 69px;\n  }\n  @media screen and (min-width: 1280px) {\n    min-width: 80px;\n  }\n`;\n\nexport const StreamNavLink = styled(Link)`\n  display: block;\n\n  cursor: pointer;\n  text-decoration: none;\n  text-align: center;\n  padding: 8px;\n\n  font-size: 32px;\n  font-weight: 600;\n  letter-spacing: 1.8px;\n\n  color: var(--accent-color);\n  border: 2px solid var(--main-transparent-color);\n  border-radius: 50%;\n\n  transition: color var(--animation-global),\n    background-color var(--animation-global);\n\n  @media screen and (min-width: 768px) {\n    padding: 12px;\n    font-size: 36px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 16px;\n    font-size: 40px;\n  }\n\n  &:hover,\n  &:focus {\n    color: var(--main-color);\n    background-color: var(--accent-transparent-color);\n  }\n`;\n","import {\n  StreamNavDescription,\n  StreamNavItem,\n  StreamNavLink,\n  StreamNavList,\n  StreamNavTitle,\n  StreamNavigation,\n  StreamNavigationBox,\n} from '../StreamNav/StreamNav.styled';\n\nexport const StreamNavKids = () => {\n  return (\n    <>\n      <StreamNavigationBox>\n        <StreamNavigation>\n          <StreamNavTitle>Вітаємо на сторінці онлайн-уроків!</StreamNavTitle>\n          <StreamNavDescription>\n            Щоб знайти потрібну трансляцію, просто оберіть рівень:\n          </StreamNavDescription>\n          <StreamNavList>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams-kids/a1'}>A1</StreamNavLink>\n            </StreamNavItem>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams-kids/a2'}>A2</StreamNavLink>\n            </StreamNavItem>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams-kids/b1'}>B1</StreamNavLink>\n            </StreamNavItem>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams-kids/b2'}>B2</StreamNavLink>\n            </StreamNavItem>\n          </StreamNavList>\n        </StreamNavigation>\n      </StreamNavigationBox>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { StreamsBackgroundWrapper } from 'components/BackgroundWrapper/BackgroundWrappers';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { LoaderWrapper } from 'components/SharedLayout/Loaders/Loader.styled';\nimport { StreamNavKids } from 'components/Stream/StreamNavKids/StreamNavKids';\nimport { Formik } from 'formik';\nimport { useLayoutEffect, useState } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport * as yup from 'yup';\nimport {\n  LoginInput,\n  LoginInputNote,\n  LoginLogo,\n  StreamAuthText,\n  StreamAuthTextHello,\n} from '../../components/Stream/Stream.styled';\nimport {\n  AdminFormBtn,\n  LoginForm,\n} from '../Streams/AdminPanel/AdminPanel.styled';\n\naxios.defaults.baseURL = 'https://aggregator-server.onrender.com';\n\nconst setAuthToken = token => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n};\n\nconst StreamsKids = () => {\n  let location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [links, setLinks] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [isUserLogged, setIsUserLogged] = useState(false);\n\n  const room = location.pathname;\n\n  const wakeupRequest = async () => {\n    try {\n      const wake = await axios.get('/');\n      console.log(wake.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const resetLogin = () => {\n    localStorage.removeItem('AP_logged_in');\n    const isLoggedIn = localStorage.getItem('APLoggedIn');\n    if (!isLoggedIn) {\n      localStorage.removeItem('userID');\n      localStorage.removeItem('userName');\n    }\n  };\n\n  const detectUser = async () => {\n    try {\n      let ip;\n      try {\n        ip = (await axios.get('https://jsonip.com/')).data.ip;\n        console.log(ip);\n      } catch (error) {\n        console.log(error);\n      }\n      const id = localStorage.getItem('userID');\n      const user = await axios.get(`https://ap-chat.onrender.com/users/${id}`);\n      setCurrentUser(\n        currentUser =>\n          (currentUser = user.data || {\n            username: 'User Is Not Logged In',\n            isBanned: false,\n            userIP: ip || 'user has disabled ip tracker',\n          })\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const initialLoginValues = {\n    mail: '',\n    password: '',\n  };\n\n  const loginSchema = yup.object().shape({\n    mail: yup\n      .string()\n      .required('Вкажіть пошту, за якою ви зареєстровані на нашій платформі!'),\n    password: yup\n      .string()\n      .required(\n        'Введіть пароль, який ви використовуєте для входу на нашу платформу!'\n      ),\n  });\n\n  const handleLoginSubmit = async (values, { resetForm }) => {\n    values.mail = values.mail.toLowerCase();\n    try {\n      const response = await axios.post('/users/login', values);\n      console.log(values);\n      console.log(response);\n      setAuthToken(response.data.token);\n      setIsUserLogged(isLogged => (isLogged = true));\n      localStorage.setItem('mail', values.mail);\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useLayoutEffect(() => {\n    resetLogin();\n    wakeupRequest();\n    detectUser();\n\n    const getLinksRequest = async () => {\n      try {\n        setIsLoading(isLoading => (isLoading = true));\n        setLinks((await axios.get('/links')).data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n    getLinksRequest();\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      try {\n        const res = await axios.post(\n          'https://aggregator-server.onrender.com/users/refresh',\n          { mail: localStorage.getItem('mail') }\n        );\n        setIsUserLogged(isLogged => (isLogged = true));\n        console.log(res);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    refreshToken();\n  }, []);\n\n  return (\n    <>\n      <StreamsBackgroundWrapper>\n        {!isUserLogged ? (\n          <Formik\n            initialValues={initialLoginValues}\n            onSubmit={handleLoginSubmit}\n            validationSchema={loginSchema}\n          >\n            <LoginForm>\n              <LoginLogo />\n              <StreamAuthText>\n                <StreamAuthTextHello>Привіт!</StreamAuthTextHello>\n                Ця сторінка недоступна для неавторизованих користувачів. Але,\n                якщо ви маєте доступ до нашої платформи, то й до цієї сторінки\n                теж. Введіть дані, які ви використовуєте для входу на платформу.\n              </StreamAuthText>\n              <Label>\n                <LoginInput type=\"text\" name=\"mail\" placeholder=\"Login\" />\n                <LoginInputNote component=\"p\" name=\"mail\" type=\"email\" />\n              </Label>\n              <Label>\n                <LoginInput\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <LoginInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Увійти</AdminFormBtn>\n            </LoginForm>\n          </Formik>\n        ) : location.pathname === '/streams-kids' ||\n          location.pathname === '/streams-kids/' ? (\n          <StreamNavKids />\n        ) : (\n          <Outlet\n            context={[links, isLoading, currentUser, setCurrentUser, room]}\n          />\n        )}\n\n        {isLoading && (\n          <LoaderWrapper>\n            <Loader />\n          </LoaderWrapper>\n        )}\n      </StreamsBackgroundWrapper>\n    </>\n  );\n};\n\nexport default StreamsKids;\n"],"names":["StreamNavigationBox","styled","_templateObject","_taggedTemplateLiteral","StreamNavigation","_templateObject2","StreamNavTitle","_templateObject3","StreamNavDescription","_templateObject4","StreamNavList","_templateObject5","StreamNavItem","_templateObject6","StreamNavLink","Link","_templateObject7","StreamNavKids","_jsx","_Fragment","children","_jsxs","to","axios","StreamsKids","location","useLocation","isLoading","setIsLoading","useState","links","setLinks","currentUser","setCurrentUser","isUserLogged","setIsUserLogged","room","pathname","loginSchema","yup","shape","mail","required","password","useLayoutEffect","localStorage","removeItem","getItem","async","wake","console","log","data","error","wakeupRequest","ip","id","user","concat","username","isBanned","userIP","detectUser","getLinksRequest","res","isLogged","refreshToken","StreamsBackgroundWrapper","Outlet","context","Formik","initialValues","onSubmit","values","_ref","resetForm","toLowerCase","response","token","setItem","validationSchema","LoginForm","LoginLogo","StreamAuthText","StreamAuthTextHello","Label","LoginInput","type","name","placeholder","LoginInputNote","component","AdminFormBtn","LoaderWrapper","Loader"],"sourceRoot":""}