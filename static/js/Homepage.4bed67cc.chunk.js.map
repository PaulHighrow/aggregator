{"version":3,"file":"static/js/Homepage.4bed67cc.chunk.js","mappings":"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","sources":["components/EdPlatform/EdPlatform.jsx","components/HowItWorks/HowItWorks.jsx","pages/Home/Home.jsx"],"sourcesContent":["import useSize from '@react-hook/size';\nimport { Box } from 'components/Box/Box.styled';\nimport { useRef, useState } from 'react';\n\nimport { YouTubeVideoSoundBtn } from 'components/HowItWorks/HowItWorks.styled';\nimport { useInView } from 'react-intersection-observer';\nimport ReactPlayer from 'react-player/lazy';\nimport {\n  EdPlatformArrow,\n  EdPlatformArrowInView,\n  EdPlatformArrowMobile,\n  EdPlatformArrowMobileInView,\n  EdPlatformBackground,\n  EdPlatformNavigation,\n  EdPlatformSection,\n  EdPlatformSubTitle,\n  EdPlatformTitle,\n  EdPlatformWrapper,\n  EdVideoToggler,\n  MoreBtnBox,\n  NavigationItem,\n  VideoBox,\n  VideoLimiter,\n} from './EdPlatform.styled';\n\nexport const EdPlatform = () => {\n  const listItems = [\n    'Платформа',\n    'Онлайн-словник',\n    'Інтерактивні уроки',\n    'Призи для учнів',\n  ];\n  const videoUrls = [\n    'https://youtu.be/-axzcvYXKgk?si=yxFfIYIU1r8BKsTu?t=17',\n    'https://youtu.be/-axzcvYXKgk?si=yxFfIYIU1r8BKsTu?t=240',\n    'https://youtu.be/-axzcvYXKgk?si=yxFfIYIU1r8BKsTu?t=409',\n    'https://youtu.be/-axzcvYXKgk?si=yxFfIYIU1r8BKsTu?t=433',\n  ];\n  const [timeCode, setTimeCode] = useState('Англійська мова');\n  const [videoUrl, setVideoUrl] = useState(videoUrls[0]);\n  const edPlatformEl = useRef();\n  // eslint-disable-next-line\n  const [width, _] = useSize(edPlatformEl);\n  const [videoRef, videoInView] = useInView();\n\n  const { ref, inView } = useInView({\n    triggerOnce: true,\n    delay: 1000,\n  });\n\n  const toggleTimeCode = (item, i) => {\n    setTimeCode(timeCode => (timeCode = item));\n    setVideoUrl(videoUrl => (videoUrl = videoUrls[i]));\n  };\n\n  return (\n    <EdPlatformBackground>\n      <EdPlatformSection id=\"platform\" ref={edPlatformEl}>\n        <Box>\n          <EdPlatformTitle id=\"platform-anchor\">\n            НАВЧАЛЬНА <EdPlatformSubTitle>ПЛАТФОРМА</EdPlatformSubTitle>\n          </EdPlatformTitle>\n          <EdPlatformWrapper>\n            <VideoLimiter ref={videoRef}>\n              <VideoBox>\n                <YouTubeVideoSoundBtn />\n                <ReactPlayer\n                  loop={true}\n                  controls={true}\n                  playing={videoInView ? true : false}\n                  muted={true}\n                  style={{\n                    display: 'block',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                  }}\n                  width=\"100%\"\n                  height=\"100%\"\n                  url={videoUrl}\n                />\n              </VideoBox>\n            </VideoLimiter>\n            <MoreBtnBox>\n              <EdPlatformNavigation ref={ref}>\n                {listItems.map((item, i) => (\n                  <NavigationItem key={i}>\n                    <EdVideoToggler\n                      className={timeCode === item ? 'selected' : ''}\n                      onClick={() => toggleTimeCode(item, i)}\n                    >\n                      {item}\n                      {width < 768 ? (\n                        <>\n                          {inView && (\n                            <EdPlatformArrowMobileInView\n                              style={{ animationDelay: `${i}s` }}\n                            />\n                          )}\n                          <EdPlatformArrowMobile className=\"on-hover\" />\n                        </>\n                      ) : (\n                        <>\n                          {inView && (\n                            <EdPlatformArrowInView\n                              style={{ animationDelay: `${i}s` }}\n                            />\n                          )}\n                          <EdPlatformArrow className=\"on-hover\" />\n                        </>\n                      )}\n                    </EdVideoToggler>\n                  </NavigationItem>\n                ))}\n              </EdPlatformNavigation>\n            </MoreBtnBox>\n          </EdPlatformWrapper>\n        </Box>\n      </EdPlatformSection>\n    </EdPlatformBackground>\n  );\n};\n","import useSize from '@react-hook/size';\nimport { VideoModal } from 'components/AboutUs/VideoModal/VideoModal';\nimport { Box } from 'components/Box/Box.styled';\nimport { useEffect, useState } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport {\n  HowItWorksSection,\n  PageNavigation,\n  PageNavigationArrow,\n  PageNavigationItem,\n  PageNavigationLink,\n  PageNavigationText,\n  PlayerLimiter,\n  SectionSubTitle,\n  SectionTitle,\n  SectionWrapper,\n  Video,\n  VideoSoundBtn,\n} from './HowItWorks.styled';\n\nexport const HowItWorks = () => {\n  const [isVideoModalOpen, setIsVideoModalOpen] = useState(false);\n  const [videoRef, videoInView] = useInView();\n\n  const toggleVideoModal = () => {\n    setIsVideoModalOpen(isOpen => !isOpen);\n    if (!document.body.style.overflowY) {\n      document.body.style.overflowY = 'hidden';\n    }\n  };\n\n  const closeVideoModal = () => {\n    setIsVideoModalOpen(isOpen => (isOpen = false));\n    !document.body.style.overflowY && isVideoModalOpen\n      ? (document.body.style.overflowY = 'hidden')\n      : (document.body.style.overflowY = '');\n  };\n\n  useEffect(() => {\n    const onEscapeClose = event => {\n      if (event.code === 'Escape' && isVideoModalOpen) {\n        closeVideoModal();\n      }\n    };\n\n    window.addEventListener('keydown', onEscapeClose);\n\n    return () => {\n      window.removeEventListener('keydown', onEscapeClose);\n    };\n  });\n\n  const listItems = [\n    { to: 'howitworks-anchor', service: 'Мотивація' },\n    { to: 'platform-anchor', service: 'Навчальна платформа' },\n    { to: 'reviews-anchor', service: 'Відгуки про курс' },\n    { to: 'aboutus-anchor', service: 'Про нас' },\n  ];\n  // eslint-disable-next-line\n  const [width, _] = useSize(document.body);\n\n  const props =\n    width > 768\n      ? { spy: true, smooth: true, offset: -120 }\n      : { spy: true, smooth: true, offset: -70 };\n\n  return (\n    <HowItWorksSection id=\"howitworks\">\n      <Box>\n        <SectionWrapper>\n          <SectionTitle>\n            HOW IT <SectionSubTitle>WORKS</SectionSubTitle>\n          </SectionTitle>\n          <PageNavigation>\n            {listItems.map((item, i) => (\n              <PageNavigationItem key={i}>\n                <PageNavigationLink to={item.to} {...props}>\n                  {item.service}\n                  <PageNavigationArrow />\n                  <PageNavigationText>перейти</PageNavigationText>\n                </PageNavigationLink>\n              </PageNavigationItem>\n            ))}\n          </PageNavigation>\n        </SectionWrapper>\n        <PlayerLimiter\n          ref={videoRef}\n          onClick={toggleVideoModal}\n          id=\"howitworks-anchor\"\n        >\n          <VideoSoundBtn />\n          <Video\n            loop\n            controls={false}\n            autoplay={videoInView ? 'true' : 'false'}\n            playsInline\n            muted={true}\n          >\n            <source\n              src=\"https://ap.education/static/video/trailers/HowItWorks.webm\"\n              type=\"video/webm\"\n            />\n            <source\n              src=\"https://ap.education/static/video/trailers/HowItWorks.mp4\"\n              type=\"video/mp4\"\n            />\n          </Video>\n        </PlayerLimiter>\n      </Box>\n      {isVideoModalOpen && (\n        <VideoModal\n          closeVideoModal={closeVideoModal}\n          url={'https://youtu.be/ncDw4CGMn2o?si=TLiw7DOmUaf9-cef'}\n        />\n      )}\n    </HowItWorksSection>\n  );\n};\n","import { AboutUs } from 'components/AboutUs/AboutUs';\nimport { BackgroundWrapper } from 'components/BackgroundWrapper/BackgroundWrappers';\nimport { Consent } from 'components/Consent/Consent';\nimport { EdPlatform } from 'components/EdPlatform/EdPlatform';\nimport { Hero } from 'components/Hero/Hero';\nimport { HowItWorks } from 'components/HowItWorks/HowItWorks';\nimport { LeadForm } from 'components/LeadForm/LeadForm';\nimport { Reviews } from 'components/Reviews/Reviews';\nimport { useEffect, useState } from 'react';\n\nconst Home = ({ utms }) => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpenModal(isOpen => !isOpen);\n    if (!document.body.style.overflowY) {\n      document.body.style.overflowY = 'hidden';\n    }\n  };\n\n  const closeModal = () => {\n    setIsOpenModal(isOpen => (isOpen = false));\n    !document.body.style.overflowY && isOpenModal\n      ? (document.body.style.overflowY = 'hidden')\n      : (document.body.style.overflowY = '');\n  };\n\n  useEffect(() => {\n    const onEscapeClose = event => {\n      if (event.code === 'Escape' && isOpenModal) {\n        closeModal();\n      }\n    };\n\n    console.log(window.screen);\n\n    window.addEventListener('keydown', onEscapeClose);\n\n    return () => {\n      window.removeEventListener('keydown', onEscapeClose);\n    };\n  });\n\n  return (\n    <>\n      <BackgroundWrapper>\n        <Hero toggleModal={toggleModal} />\n        <HowItWorks />\n      </BackgroundWrapper>\n      <EdPlatform />\n      {/* <Admission /> */}\n      {/* <Translations utms={utms} /> */}\n      <Reviews toggleModal={toggleModal} />\n      {/* <ExamCenter toggleModal={toggleModal} closeModal={closeModal} /> */}\n      <AboutUs />\n      <Consent />\n      {isOpenModal && <LeadForm closeModal={closeModal} utms={utms} />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["EdPlatform","videoUrls","_useState","useState","_useState2","_slicedToArray","timeCode","setTimeCode","_useState3","_useState4","videoUrl","setVideoUrl","edPlatformEl","useRef","_useSize","useSize","_useSize2","width","_useInView","useInView","_useInView2","videoRef","videoInView","_useInView3","triggerOnce","delay","ref","inView","_jsx","EdPlatformBackground","children","EdPlatformSection","id","_jsxs","Box","EdPlatformTitle","EdPlatformSubTitle","EdPlatformWrapper","VideoLimiter","VideoBox","YouTubeVideoSoundBtn","ReactPlayer","loop","controls","playing","muted","style","display","position","top","left","height","url","MoreBtnBox","EdPlatformNavigation","map","item","i","NavigationItem","EdVideoToggler","className","onClick","toggleTimeCode","_Fragment","EdPlatformArrowMobileInView","animationDelay","concat","EdPlatformArrowMobile","EdPlatformArrowInView","EdPlatformArrow","HowItWorks","isVideoModalOpen","setIsVideoModalOpen","closeVideoModal","isOpen","document","body","overflowY","useEffect","onEscapeClose","event","code","window","addEventListener","removeEventListener","props","spy","smooth","offset","HowItWorksSection","SectionWrapper","SectionTitle","SectionSubTitle","PageNavigation","to","service","PageNavigationItem","PageNavigationLink","_objectSpread","PageNavigationArrow","PageNavigationText","PlayerLimiter","VideoSoundBtn","Video","autoplay","playsInline","src","type","VideoModal","_ref","utms","isOpenModal","setIsOpenModal","toggleModal","closeModal","console","log","screen","BackgroundWrapper","Hero","Reviews","AboutUs","Consent","LeadForm"],"sourceRoot":""}