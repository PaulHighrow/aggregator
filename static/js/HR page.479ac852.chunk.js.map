{"version":3,"file":"static/js/HR page.479ac852.chunk.js","mappings":"iWAGaA,EAAsBC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2UAsBpCC,EAAmBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wPAgB7BG,EAAiBL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gRAgB1BK,EAAuBP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wPAgB/BO,EAAgBT,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,gGAOzBS,EAAgBX,EAAAA,GAAAA,GAASY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,kMAYzBW,GAAgBb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAYe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,krB,kIC/E5Bc,EAAQ,WACnB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAClB,EAAAA,GAAmB,CAAAoB,UAClBC,EAAAA,EAAAA,MAACjB,EAAAA,GAAgB,CAAAgB,SAAA,EACfF,EAAAA,EAAAA,KAACI,EAAAA,GAAe,CAAAF,SAAC,+YAMjBC,EAAAA,EAAAA,MAACE,EAAAA,GAAc,CAAAH,SAAA,EACbF,EAAAA,EAAAA,KAACM,EAAAA,GAAc,CAAAJ,UACbF,EAAAA,EAAAA,KAACO,EAAAA,GAAc,CAACC,GAAI,YAAYN,UAC9BF,EAAAA,EAAAA,KAACS,EAAAA,GAAS,SAGdT,EAAAA,EAAAA,KAACM,EAAAA,GAAc,CAAAJ,UACbF,EAAAA,EAAAA,KAACO,EAAAA,GAAc,CAACC,GAAI,SAASN,UAC3BF,EAAAA,EAAAA,KAACU,EAAAA,GAAY,iBAQ7B,ECnCAC,EAAAA,EAAAA,SAAAA,QAAyB,yCAEzB,IAiBA,EAjBW,WACT,IAAIC,GAAWC,EAAAA,EAAAA,MAEf,OACEb,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACc,EAAAA,EAAwB,CAAAZ,SACA,QAAtBU,EAASG,UACY,SAAtBH,EAASG,UACPf,EAAAA,EAAAA,KAACD,EAAK,KAENC,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,OAKjB,C","sources":["components/Stream/StreamNav/StreamNav.styled.js","pages/HR/HRNav/HRNav.jsx","pages/HR/HR.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StreamNavigationBox = styled.section`\n  height: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  padding: 20px;\n  gap: 15px;\n\n  @media screen and (min-width: 768px) {\n    padding: 30px;\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 40px;\n    gap: 25px;\n  }\n`;\n\nexport const StreamNavigation = styled.div`\n  display: flex;\n  flex-direction: column;\n  \n  font-family: var(--streams-font-family);\n  gap: 15px;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    gap: 25px;\n  }\n`;\n\nexport const StreamNavTitle = styled.h2`\n  text-align: center;\n  color: var(--main-color);\n  font-size: 32px;\n  font-weight: 600;\n  letter-spacing: 1.8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 40px;\n  }\n`;\n\nexport const StreamNavDescription = styled.p`\n  text-align: center;\n  color: var(--main-color);\n\n  font-size: 22px;\n  font-weight: 500;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 26px;\n  }\n`;\n\nexport const StreamNavList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: 20px;\n`;\n\nexport const StreamNavItem = styled.li`\n  min-width: 56px;\n  width: max-content;\n\n  @media screen and (min-width: 768px) {\n    min-width: 69px;\n  }\n  @media screen and (min-width: 1280px) {\n    min-width: 80px;\n  }\n`;\n\nexport const StreamNavLink = styled(Link)`\n  display: block;\n\n  cursor: pointer;\n  text-decoration: none;\n  text-align: center;\n  padding: 8px;\n\n  font-size: 32px;\n  font-weight: 600;\n  letter-spacing: 1.8px;\n\n  color: var(--accent-color);\n  border: 2px solid var(--main-transparent-color);\n  border-radius: 50%;\n\n  transition: color var(--animation-global),\n    background-color var(--animation-global);\n\n  @media screen and (min-width: 768px) {\n    padding: 12px;\n    font-size: 36px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 16px;\n    font-size: 40px;\n  }\n\n  &:hover,\n  &:focus {\n    color: var(--main-color);\n    background-color: var(--accent-transparent-color);\n  }\n`;\n","import {\n  StreamNavigation,\n  StreamNavigationBox,\n} from 'components/Stream/StreamNav/StreamNav.styled';\nimport {\n  ServiceNavItem,\n  ServiceNavLink,\n  ServiceNavList,\n  ServiceNavTitle,\n  TelegramLogo,\n  ViberLogo\n} from './HRNav.styled';\n\nexport const HRNav = () => {\n  return (\n    <>\n      <StreamNavigationBox>\n        <StreamNavigation>\n          <ServiceNavTitle>\n            Оберіть месенджер, в якому Вам буде зручно спілкуватись з нашим HR-менеджером:\n          </ServiceNavTitle>\n          {/* <ServiceNavDescription>\n            Не забудьте написати Ваше прізвище та ім'я першим повідомленням!\n          </ServiceNavDescription> */}\n          <ServiceNavList>\n            <ServiceNavItem>\n              <ServiceNavLink to={'/hr/viber'}>\n                <ViberLogo />\n              </ServiceNavLink>\n            </ServiceNavItem>\n            <ServiceNavItem>\n              <ServiceNavLink to={'/hr/tg'}>\n                <TelegramLogo />\n              </ServiceNavLink>\n            </ServiceNavItem>\n          </ServiceNavList>\n        </StreamNavigation>\n      </StreamNavigationBox>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { StreamsBackgroundWrapper } from 'components/BackgroundWrapper/BackgroundWrappers';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { HRNav } from './HRNav/HRNav';\n\naxios.defaults.baseURL = 'https://aggregator-server.onrender.com';\n\nconst HR = () => {\n  let location = useLocation();\n\n  return (\n    <>\n      <StreamsBackgroundWrapper>\n        {location.pathname === '/hr' ||\n        location.pathname === '/hr/' ? (\n          <HRNav/>\n        ) : (\n          <Outlet />\n        )}\n      </StreamsBackgroundWrapper>\n    </>\n  );\n};\n\nexport default HR;\n"],"names":["StreamNavigationBox","styled","_templateObject","_taggedTemplateLiteral","StreamNavigation","_templateObject2","StreamNavTitle","_templateObject3","StreamNavDescription","_templateObject4","StreamNavList","_templateObject5","StreamNavItem","_templateObject6","StreamNavLink","Link","_templateObject7","HRNav","_jsx","_Fragment","children","_jsxs","ServiceNavTitle","ServiceNavList","ServiceNavItem","ServiceNavLink","to","ViberLogo","TelegramLogo","axios","location","useLocation","StreamsBackgroundWrapper","pathname","Outlet"],"sourceRoot":""}