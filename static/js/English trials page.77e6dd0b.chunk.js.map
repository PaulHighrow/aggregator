{"version":3,"file":"static/js/English trials page.77e6dd0b.chunk.js","mappings":"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","sources":["pages/Trials/StreamTrialEnglish.jsx"],"sourcesContent":["import useSize from '@react-hook/size';\nimport axios from 'axios';\nimport { StreamsBackgroundWrapper } from 'components/BackgroundWrapper/BackgroundWrappers';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { LoaderWrapper } from 'components/SharedLayout/Loaders/Loader.styled';\nimport { Kahoots } from 'components/Stream/Kahoots/Kahoots';\nimport { Support } from 'components/Stream/Support/Support';\nimport { nanoid } from 'nanoid';\nimport { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { io } from 'socket.io-client';\nimport { Chat } from 'utils/Chat/Chat';\nimport {\n  ChatLoginButton,\n  ChatLoginForm,\n  ChatLoginHeader,\n  ChatLoginInput,\n  ChatLoginLabel,\n} from 'utils/Chat/Chat.styled';\nimport {\n  ButtonBox,\n  ChatBox,\n  ChatBtn,\n  ChatLogo,\n  KahootBtn,\n  KahootLogo,\n  MoldingNoClick,\n  MoldingNoClickSecondary,\n  StreamPlaceHolder,\n  StreamPlaceHolderText,\n  StreamSection,\n  SupportArrow,\n  SupportBtn,\n  SupportLogo,\n  SupportMarkerLeft,\n  SupportMarkerRight,\n  SupportPointer,\n  VideoBox,\n} from '../../components/Stream/Stream.styled';\n\naxios.defaults.baseURL = 'https://aggregator-server.onrender.com';\n\nconst StreamTrialEnglish = () => {\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [isKahootOpen, setIsKahootOpen] = useState(false);\n  const [isSupportOpen, setIsSupportOpen] = useState(false);\n  const [isOpenedLast, setIsOpenedLast] = useState('');\n  const [isAnimated, setIsAnimated] = useState(false);\n  const [animatedID, setAnimationID] = useState('');\n  const chatEl = useRef();\n  // eslint-disable-next-line\n  const [chatWidth, chatHeight] = useSize(chatEl);\n  const [width, height] = useSize(document.body);\n  const [isLoading, setIsLoading] = useState(false);\n  const [links, setLinks] = useState({});\n  const [userName, setUserName] = useState('');\n  // eslint-disable-next-line\n  const [userID, setUserID] = useState('');\n  const [isLoggedToChat, setIsLoggedToChat] = useState(false);\n  const [messages, setMessages] = useState([]);\n\n  const wakeupRequest = async () => {\n    try {\n      const wake = await axios.get('/');\n      console.log(wake.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useLayoutEffect(() => {\n    wakeupRequest();\n\n    const getLinksRequest = async () => {\n      try {\n        setIsLoading(isLoading => (isLoading = true));\n        setLinks((await axios.get('/links')).data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n    getLinksRequest();\n  }, []);\n\n  const toggleKahoot = e => {\n    setIsKahootOpen(isKahootOpen => !isKahootOpen);\n    isChatOpen || isSupportOpen\n      ? setIsOpenedLast(isOpenedLast => 'kahoot')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const toggleChat = () => {\n    setIsChatOpen(isChatOpen => !isChatOpen);\n    isKahootOpen || isSupportOpen\n      ? setIsOpenedLast(isOpenedLast => 'chat')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const toggleSupport = () => {\n    setIsSupportOpen(isSupportOpen => !isSupportOpen);\n    setAnimationID('');\n    isKahootOpen || isChatOpen\n      ? setIsOpenedLast(isOpenedLast => 'support')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const handleSupportClick = data_id => {\n    setAnimationID(id => (id = data_id));\n    if (!isAnimated) {\n      setIsAnimated(isAnimated => !isAnimated);\n    }\n  };\n\n  const videoBoxWidth =\n    chatWidth === 0 && width > height ? width - 300 : width - chatWidth;\n\n  const checkLogin = e => {\n    const name = localStorage.getItem('userName');\n    const id = localStorage.getItem('userID');\n\n    if (id && name) {\n      setIsLoggedToChat(isLogged => (isLogged = true));\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const idGen = nanoid(8);\n    setUserID(id => (id = idGen));\n    localStorage.setItem('userName', userName.trim());\n    localStorage.setItem('userID', idGen);\n    setIsLoggedToChat(isLogged => !isLogged);\n  };\n\n  const socketRef = useRef(null);\n\n  useEffect(() => {\n    document.title = 'English Trial | AP Education';\n\n    socketRef.current = io('https://ap-chat.onrender.com/');\n    checkLogin();\n\n    socketRef.current.on('connected', (connected, handshake) => {\n      console.log(connected);\n      console.log(handshake);\n    });\n\n    const getMessages = async () => {\n      try {\n        const dbMessages = await axios.get(\n          'https://ap-chat.onrender.com/messages'\n        );\n        const todayMessages = dbMessages.data.filter(\n          message =>\n            new Date(message.createdAt).getDate() === new Date().getDate()\n        );\n        setMessages(messages => (messages = todayMessages));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMessages();\n\n    socketRef.current.on('message', async data => {\n      const updateMessages = async () => {\n        try {\n          await axios.post('https://ap-chat.onrender.com/messages', data);\n          setMessages(messages => (messages = [...messages, data]));\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      await updateMessages();\n    });\n\n    socketRef.current.on('message:get', async data => {\n      setMessages(messages => (messages = [...messages, data]));\n    });\n\n    return () => {\n      socketRef.current.off('connected');\n      socketRef.current.off('message');\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  return (\n    <>\n      {(links.trials === undefined || links.trials[0] < 10) && !isLoading ? (\n        <StreamPlaceHolder>\n          <StreamPlaceHolderText>\n            Поки що трансляції тут немає! <br />\n            Перевірте, чи правильно ви вказали адресу сторінки або спробуйте\n            пізніше.\n          </StreamPlaceHolderText>\n        </StreamPlaceHolder>\n      ) : (\n        <>\n          <StreamSection\n            style={{\n              width:\n                isChatOpen && width > height ? `${videoBoxWidth}px` : '100%',\n            }}\n          >\n            <StreamsBackgroundWrapper>\n              {isLoading && (\n                <LoaderWrapper>\n                  <Loader />\n                </LoaderWrapper>\n              )}\n\n              <VideoBox>\n                <MoldingNoClick />\n                <MoldingNoClickSecondary />\n                <SupportMarkerLeft\n                  className={\n                    (isAnimated && animatedID === 'sound') ||\n                    (isAnimated && animatedID === 'live')\n                      ? 'animated'\n                      : ''\n                  }\n                >\n                  <SupportArrow\n                    className={\n                      (isAnimated && animatedID === 'sound') ||\n                      (isAnimated && animatedID === 'live')\n                        ? 'animated'\n                        : ''\n                    }\n                  />\n                </SupportMarkerLeft>\n                <SupportMarkerRight\n                  className={\n                    isAnimated && animatedID === 'quality' ? 'animated' : ''\n                  }\n                >\n                  <SupportPointer\n                    className={\n                      isAnimated && animatedID === 'quality' ? 'animated' : ''\n                    }\n                  />\n                </SupportMarkerRight>\n                <ReactPlayer\n                  playing={true}\n                  muted={true}\n                  controls={true}\n                  config={{\n                    youtube: {\n                      playerVars: { rel: 0 },\n                    },\n                  }}\n                  style={{\n                    display: 'block',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                  }}\n                  width=\"100%\"\n                  height=\"100vh\"\n                  url={links.trials}\n                />\n              </VideoBox>\n\n              <ButtonBox>\n                <KahootBtn\n                  onClick={toggleKahoot}\n                  className={\n                    isAnimated && animatedID === 'kahoot_open' ? 'animated' : ''\n                  }\n                >\n                  <KahootLogo />\n                </KahootBtn>\n\n                <ChatBtn\n                  onClick={toggleChat}\n                  className={\n                    isAnimated && animatedID === 'chat_open' ? 'animated' : ''\n                  }\n                >\n                  <ChatLogo />\n                </ChatBtn>\n\n                <SupportBtn onClick={toggleSupport}>\n                  <SupportLogo />\n                </SupportBtn>\n              </ButtonBox>\n              {links.trials &&\n              !links.trials.includes('youtube') &&\n              !links.trials.includes('youtu.be')\n                ? window.location.replace(links.trials)\n                : null}\n              {height > width && (\n                <ChatBox\n                  ref={chatEl}\n                  className={isChatOpen ? 'shown' : 'hidden'}\n                  style={\n                    isOpenedLast === 'chat' ? { zIndex: '2' } : { zIndex: '1' }\n                  }\n                >\n                  {!isLoggedToChat ? (\n                    <ChatLoginForm onSubmit={handleSubmit}>\n                      <ChatLoginHeader>AP Open Chat</ChatLoginHeader>\n                      <ChatLoginLabel htmlFor=\"username\">\n                        Введіть ваше ім'я та прізвище повністю\n                      </ChatLoginLabel>\n                      <ChatLoginInput\n                        type=\"text\"\n                        minLength={3}\n                        name=\"username\"\n                        id=\"username\"\n                        value={userName}\n                        onChange={e => setUserName(e.target.value)}\n                      />\n                      <ChatLoginButton>Готово!</ChatLoginButton>\n                    </ChatLoginForm>\n                  ) : (\n                    <Chat\n                      socket={socketRef.current}\n                      messages={messages}\n                      isChatOpen={isChatOpen}\n                    />\n                  )}\n                </ChatBox>\n              )}\n\n              <Kahoots\n                sectionWidth={width}\n                sectionHeight={height}\n                isKahootOpen={isKahootOpen}\n                isChatOpen={isChatOpen}\n                isOpenedLast={isOpenedLast}\n              />\n\n              <Support\n                sectionWidth={width}\n                isSupportOpen={isSupportOpen}\n                isOpenedLast={isOpenedLast}\n                handleSupport={handleSupportClick}\n                openKahoot={toggleKahoot}\n                isKahootOpen={isKahootOpen}\n              />\n            </StreamsBackgroundWrapper>\n          </StreamSection>\n          {width >= height && (\n            <ChatBox\n              ref={chatEl}\n              className={isChatOpen ? 'shown' : 'hidden'}\n              style={\n                isOpenedLast === 'chat' ? { zIndex: '2' } : { zIndex: '1' }\n              }\n            >\n              {!isLoggedToChat ? (\n                <ChatLoginForm onSubmit={handleSubmit}>\n                  <ChatLoginHeader>AP Open Chat</ChatLoginHeader>\n                  <ChatLoginLabel htmlFor=\"username\">\n                    Введіть ваше ім'я та прізвище повністю\n                  </ChatLoginLabel>\n                  <ChatLoginInput\n                    type=\"text\"\n                    minLength={3}\n                    name=\"username\"\n                    id=\"username\"\n                    value={userName}\n                    onChange={e => setUserName(e.target.value)}\n                  />\n                  <ChatLoginButton>Готово!</ChatLoginButton>\n                </ChatLoginForm>\n              ) : (\n                <Chat\n                  socket={socketRef.current}\n                  messages={messages}\n                  isChatOpen={isChatOpen}\n                />\n              )}\n            </ChatBox>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default StreamTrialEnglish;\n"],"names":["axios","_useState","useState","_useState2","_slicedToArray","isChatOpen","setIsChatOpen","_useState3","_useState4","isKahootOpen","setIsKahootOpen","_useState5","_useState6","isSupportOpen","setIsSupportOpen","_useState7","_useState8","isOpenedLast","setIsOpenedLast","_useState9","_useState10","isAnimated","setIsAnimated","_useState11","_useState12","animatedID","setAnimationID","chatEl","useRef","_useSize","useSize","_useSize2","chatWidth","_useSize3","document","body","_useSize4","width","height","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","links","setLinks","_useState17","_useState18","userName","setUserName","_useState19","_useState20","setUserID","_useState21","_useState22","isLoggedToChat","setIsLoggedToChat","_useState23","_useState24","messages","setMessages","wakeupRequest","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wake","wrap","_context","prev","next","sent","console","log","data","t0","stop","apply","arguments","useLayoutEffect","getLinksRequest","_ref2","_callee2","_context2","t1","t2","finish","toggleKahoot","e","videoBoxWidth","handleSubmit","preventDefault","idGen","nanoid","id","localStorage","setItem","trim","isLogged","socketRef","useEffect","title","current","io","name","getItem","checkLogin","on","connected","handshake","getMessages","_ref3","_callee3","dbMessages","todayMessages","_context3","filter","message","Date","createdAt","getDate","_ref4","_callee5","updateMessages","_context5","_ref5","_callee4","_context4","concat","_toConsumableArray","_x","_ref6","_callee6","_context6","_x2","off","disconnect","_jsx","_Fragment","children","undefined","trials","StreamPlaceHolder","_jsxs","StreamPlaceHolderText","StreamSection","style","StreamsBackgroundWrapper","LoaderWrapper","Loader","VideoBox","MoldingNoClick","MoldingNoClickSecondary","SupportMarkerLeft","className","SupportArrow","SupportMarkerRight","SupportPointer","ReactPlayer","playing","muted","controls","config","youtube","playerVars","rel","display","position","top","left","url","ButtonBox","KahootBtn","onClick","KahootLogo","ChatBtn","ChatLogo","SupportBtn","SupportLogo","includes","window","location","replace","ChatBox","ref","zIndex","Chat","socket","ChatLoginForm","onSubmit","ChatLoginHeader","ChatLoginLabel","htmlFor","ChatLoginInput","type","minLength","value","onChange","target","ChatLoginButton","Kahoots","sectionWidth","sectionHeight","Support","handleSupport","data_id","openKahoot"],"sourceRoot":""}